name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build (${{ matrix.os }} - ${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        arch: [amd64, arm64]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Compute version metadata
        shell: bash
        run: |
          echo "VERSION=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          echo "COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "DATE=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_ENV
          echo "LDFLAGS=-X github.com/jvanrhyn/passgen/internal/version.Version=${VERSION} -X github.com/jvanrhyn/passgen/internal/version.Commit=${COMMIT} -X github.com/jvanrhyn/passgen/internal/version.Date=${DATE}" >> $GITHUB_ENV

      - name: Run tests
        run: go test -ldflags "$LDFLAGS" ./...

      - name: Build with Go (matrix)
        shell: bash
        run: |
          if [[ "${{ runner.os }}" == "macOS" ]]; then
            export GOOS=darwin
          elif [[ "${{ runner.os }}" == "Windows" ]]; then
            export GOOS=windows
          else
            export GOOS=linux
          fi
          export GOARCH=${{ matrix.arch }}
          export CGO_ENABLED=0
          mkdir -p bin
          OUT=bin/passgen
          if [[ "$GOOS" == "windows" ]]; then OUT=bin/passgen.exe; fi
          go build -ldflags "$LDFLAGS" -o "$OUT" ./

      - name: Package artifacts
        id: package
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p dist
          GOARCH=${{ matrix.arch }}
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            ART="passgen-${VERSION}-windows-${GOARCH}.exe"
            mv bin/passgen.exe "dist/${ART}"
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            ART="passgen-${VERSION}-macos-${GOARCH}"
            mv bin/passgen "dist/${ART}"
          else
            ART="passgen-${VERSION}-linux-${GOARCH}"
            mv bin/passgen "dist/${ART}"
          fi
          echo "asset_name=${ART}" >> $GITHUB_OUTPUT
          echo "asset_path=dist/${ART}" >> $GITHUB_OUTPUT

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.package.outputs.asset_name }}
          path: ${{ steps.package.outputs.asset_path }}

  release:
    name: Publish Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: passgen-*
          merge-multiple: true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          files: dist/**
          draft: false
          prerelease: ${{ contains(github.ref_name, 'rc') || contains(github.ref_name, 'beta') }}
